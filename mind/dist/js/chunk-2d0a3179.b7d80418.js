(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a3179"],{"0168":function(v,_,n){"use strict";n.r(_);var s=function(){var v=this;v._self._c;return v._m(0)},i=[function(){var v=this,_=v._self._c;return _("div",[_("h1",[v._v("MiniMap插件")]),_("blockquote",[_("p",[v._v("v0.2.11+")])]),_("p",[v._v("用于帮助快速开发小地图功能，小地图由两部分组成，一个是当前的画布内容，一个是视口框，当缩放、移动、元素过多时画布上可能只显示了思维导图的部分内容，可以通过视口框来查看当前视口所在位置，以及可以通过在小地图上拖动来快速定位。")]),_("h2",[v._v("注册")]),_("pre",{staticClass:"hljs"},[_("code",[_("span",{staticClass:"hljs-keyword"},[v._v("import")]),v._v(" MindMap "),_("span",{staticClass:"hljs-keyword"},[v._v("from")]),v._v(" "),_("span",{staticClass:"hljs-string"},[v._v("'simple-mind-map'")]),v._v("\n"),_("span",{staticClass:"hljs-keyword"},[v._v("import")]),v._v(" MiniMap "),_("span",{staticClass:"hljs-keyword"},[v._v("from")]),v._v(" "),_("span",{staticClass:"hljs-string"},[v._v("'simple-mind-map/src/MiniMap.js'")]),v._v("\n\nMindMap.usePlugin(MiniMap)\n")])]),_("p",[v._v("注册完且实例化"),_("code",[v._v("MindMap")]),v._v("后可通过"),_("code",[v._v("mindMap.miniMap")]),v._v("获取到该实例。")]),_("h2",[v._v("方法")]),_("h3",[v._v("calculationMiniMap(boxWidth, boxHeight)")]),_("p",[v._v("计算小地图的渲染数据，该函数内会调用"),_("code",[v._v("getMiniMap()")]),v._v("方法，所以一般使用该函数即可。")]),_("p",[_("code",[v._v("boxWidth")]),v._v("：小地图容器的宽度")]),_("p",[_("code",[v._v("boxHeight")]),v._v("：小地图容器的高度")]),_("p",[v._v("函数返回内容：")]),_("pre",{staticClass:"hljs"},[_("code",[v._v("{\n      svgHTML, "),_("span",{staticClass:"hljs-comment"},[v._v("// 小地图html")]),v._v("\n      viewBoxStyle, "),_("span",{staticClass:"hljs-comment"},[v._v("// 视图框的位置信息")]),v._v("\n      miniMapBoxScale, "),_("span",{staticClass:"hljs-comment"},[v._v("// 视图框的缩放值")]),v._v("\n      miniMapBoxLeft, "),_("span",{staticClass:"hljs-comment"},[v._v("// 视图框的left值")]),v._v("\n      miniMapBoxTop, "),_("span",{staticClass:"hljs-comment"},[v._v("// 视图框的top值")]),v._v("\n}\n")])]),_("p",[v._v("小地图思路：")]),_("p",[v._v("1.准备一个容器元素"),_("code",[v._v("container")]),v._v("，定位不为"),_("code",[v._v("static")])]),_("p",[v._v("2.在"),_("code",[v._v("container")]),v._v("内创建一个小地图容器元素"),_("code",[v._v("miniMapContainer")]),v._v("，绝对定位")]),_("p",[v._v("3.在"),_("code",[v._v("container")]),v._v("内创建一个视口框元素"),_("code",[v._v("viewBoxContainer")]),v._v("，绝对定位，设置边框样式，过渡属性（可选）")]),_("p",[v._v("4.监听"),_("code",[v._v("data_change")]),v._v("和"),_("code",[v._v("view_data_change")]),v._v("事件，在该事件内调用"),_("code",[v._v("calculationMiniMap")]),v._v("方法获取计算数据，然后将"),_("code",[v._v("svgHTML")]),v._v("渲染到"),_("code",[v._v("miniMapContainer")]),v._v("元素内，并且设置"),_("code",[v._v("miniMapContainer")]),v._v("元素的样式：")]),_("pre",{staticClass:"hljs"},[_("code",[v._v(":style="),_("span",{staticClass:"hljs-string"},[v._v("\"{\n    transform: `scale(${miniMapBoxScale})`,\n    left: miniMapBoxLeft + 'px',\n    top: miniMapBoxTop + 'px',\n}\"")]),v._v("\n")])]),_("p",[v._v("5.将"),_("code",[v._v("viewBoxStyle")]),v._v("对象设置为"),_("code",[v._v("viewBoxContainer")]),v._v("元素的样式")]),_("p",[v._v("到这一步，当画布上的思维导图变化了，小地图也会实时更新，并且视口框元素会实时反映视口在思维导图图形上的位置")]),_("p",[v._v("6.监听"),_("code",[v._v("container")]),v._v("元素的"),_("code",[v._v("mousedown")]),v._v("、"),_("code",[v._v("mousemove")]),v._v("、"),_("code",[v._v("mouseup")]),v._v("事件，分别调用下面即将介绍的三个方法即可实现鼠标拖动时画布上的思维导图也随之拖动的效果")]),_("h3",[v._v("onMousedown(e)")]),_("p",[v._v("小地图鼠标按下事件执行该函数")]),_("p",[_("code",[v._v("e")]),v._v("：事件对象")]),_("h3",[v._v("onMousemove(e, sensitivityNum = 5)")]),_("p",[v._v("小地图鼠标移动事件执行该函数")]),_("p",[_("code",[v._v("e")]),v._v("：事件对象")]),_("p",[_("code",[v._v("sensitivityNum")]),v._v("：拖动灵敏度，灵敏度越大，在小地图上拖动相同距离时实际上的画布拖动距离就越大")]),_("h3",[v._v("onMouseup()")]),_("p",[v._v("小地图鼠标松开事件执行该函数")])])}],e={},a=e,o=n("2877"),t=Object(o["a"])(a,s,i,!1,null,null,null);_["default"]=t.exports}}]);